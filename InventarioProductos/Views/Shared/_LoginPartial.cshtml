@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle text-dark" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                Hello @User.Identity?.Name!
            </a>
            <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                <!-- Muestra el tipo de usuario -->
                <li>
                    <a class="dropdown-item" href="#">Role: @(User.IsInRole("Admin") ? "Admin" : "User")</a>
                </li>
                <!-- Enlace para administrar la cuenta, solo para administradores -->
                @if (User.IsInRole("Admin"))
                {
                    <li>
                        <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index">Manage Account</a>
                    </li>
                }
                <!-- Opción de logout -->
                <li>
                    <form method="post" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button type="submit" class="dropdown-item">Logout</button>
                    </form>
                </li>
            </ul>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>